
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.utils.URIBuilder;
import org.apache.http.impl.client.HttpClientBuilder;

/**
 *
 * @author Iroshan Dissanayaka
 * 
 * 
 * Call to API using Apache HttpClient.
 * 
 */
public class CallingToGatewayAPI {

    public Map send(String phnNoPara, String messagePara) {

        Map returnMap = new HashMap();
        String phnNo = phnNoPara;
        String message = messagePara;

        try {
            
            // Create an instance of HttpClient
            HttpClient client = HttpClientBuilder.create().build();
            String oldurl = "Your URL";
            
            // Remove unnecessary charactersfrom URL String
            String newurl = oldurl.replaceAll(" ", "%20");
            
            // Build the URI
            URI uri = new URIBuilder()
                    .setScheme("http")
                    .setHost(newurl).build();
            
            // HTTP Get Object
            HttpGet httpget = new HttpGet(uri);
            
            // Execute(Send) and get responce
            HttpResponse response = client.execute(httpget);
            BufferedReader rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
            StringBuilder result = new StringBuilder();
            String line = "";
            while ((line = rd.readLine()) != null) {
                result.append(line);
            }
            
            // Get result to String
            String resultString = result.toString();
            resultString = resultString.trim();
            JsonParser parser = new JsonParser();
            JsonElement obj = parser.parse(resultString);
            
            // Get Json object
            JsonObject jsonObject = obj.getAsJsonObject();
            
            // Read data from Json object
            JsonElement status_code = jsonObject.get("Status");
            JsonElement status_msg = jsonObject.get("Data");
            JsonElement id = jsonObject.get("Id");
            
            // Add deta to return map
            returnMap.put("ERROR", "NO");
            returnMap.put("status_code", status_code.getAsInt());
            returnMap.put("status_msg", status_msg.getAsString());
            returnMap.put("id", id.getAsString());
            
            // Return the return map
            return returnMap;
        } catch (IOException ex) {
            Logger.getLogger(SecurityManager.class.getName()).log(Level.SEVERE, null, ex);
            returnMap.put("ERROR", "YES");
            returnMap.put("status_msg", ex.getMessage());
            return returnMap;
        } catch (URISyntaxException ex) {
            Logger.getLogger(LankaBellGatewayAPI.class.getName()).log(Level.SEVERE, null, ex);
            returnMap.put("ERROR", "YES");
            returnMap.put("status_msg", ex.getMessage());
            return returnMap;
        }
    }
}